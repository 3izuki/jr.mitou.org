name: Test & Deploy
on: [push, pull_request]

jobs:

  # Test job is always triggered as continuous integration
  test:
    runs-on: ubuntu-latest
    steps:
    - name: ‚òëÔ∏è Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: üíé Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        #ruby-version: 2.7 # Not necessary if `.ruby-version` is given

    - name: üë§ Get commit info for notification
      run: |
        echo "COMMIT_ACTOR=${{ github.actor }}" | awk -F '-preview' '{print $1}' >> $GITHUB_ENV
        echo "COMMIT_SHORT_SHA=$(git rev-parse --short=8 ${{ github.sha }})"     >> $GITHUB_ENV

    - name: üß™ Install gems
      run: |
        bundle config set with 'test'
        bundle config set path 'vendor/bundle'
        bundle install --jobs 4 --retry 3

    - name: üîß Build & Test
      run: |
        JEKYLL_ENV=production bundle exec jekyll build
        JEKYLL_ENV=production bundle exec jekyll doctor
        SKIP_BUILD=true       bundle exec rake test

    - name: üÜñ Notify results (Failed)
      env:
        IDOBATA_SECRETS: ${{ secrets.IDOBATA_GITHUB_ACTIONS }}
      if:   failure() && (env.IDOBATA_SECRETS != null)
      uses: mahaker/actions-idobata@v1.1.1
      with:
        hookUrl: ${{ secrets.IDOBATA_GITHUB_ACTIONS }}
        format: 'html'
        message: |
          <div>
          CI build for <a href='https://github.com/${{ github.repository }}'>${{ github.repository }}</a> : <span class='label label-danger'>Failure</span> (<a href='https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'>GitHub Actions</a>)<br>
          <img src='https://github.com/${{ env.COMMIT_ACTOR }}.png' class='icon-rounded' width='16' height='16'> <a href='https://github.com/${{ env.COMMIT_ACTOR }}'>${{ env.COMMIT_ACTOR }}</a>: ${{ github.event.head_commit.message }} (<a href='https://github.com/${{ github.repository }}/commit/${{ github.sha }}'>${{ env.COMMIT_SHORT_SHA }}</a>)
          </div>

    - name: üÜó Notify results (Success)
      env:
        IDOBATA_SECRETS: ${{ secrets.IDOBATA_GITHUB_ACTIONS }}
      if:   success() && (env.IDOBATA_SECRETS != null)
      uses: mahaker/actions-idobata@v1.1.1
      with:
        hookUrl: ${{ secrets.IDOBATA_GITHUB_ACTIONS }}
        format: 'html'
        message: |
          <div>
          CI build for <a href='https://github.com/${{ github.repository }}'>${{ github.repository }}</a> : <span class='label label-success'>Success</span> (<a href='https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'>GitHub Actions</a>)<br>
          <img src='https://github.com/${{ env.COMMIT_ACTOR }}.png' class='icon-rounded' width='16' height='16'> <a href='https://github.com/${{ env.COMMIT_ACTOR }}'>${{ env.COMMIT_ACTOR }}</a>: ${{ github.event.head_commit.message }} (<a href='https://github.com/${{ github.repository }}/commit/${{ github.sha }}'>${{ env.COMMIT_SHORT_SHA }}</a>)
          </div>

  # Deploy job is triggered only pushed to main branch && CI passed
  deploy:
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: ‚òëÔ∏è Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: üíé Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
      #  #ruby-version: 2.7 # Not necessary if `.ruby-version` is given

    - name: üß™ Install gems
      run: |
        bundle config set with 'test'
        bundle config set path 'vendor/bundle'
        bundle install --jobs 4 --retry 3

    - name: üîß Build
      run: |
        JEKYLL_ENV=production bundle exec jekyll build

    - name: ü§ñ Generate individual pages by projects.yml data
      run: |
        bundle exec rake upsert_project_pages_by_data
        if [ -n "$(git status ./_posts --porcelain)" ]; then
          if ( ruby -ryaml -e "p YAML.load(STDIN.read)" < _data/projects.yml > /dev/null ); then
            git config user.name  "Yohei Yasukawa"
            git config user.email "yohei@yasslab.jp"
            git remote set-url origin https://github-actions:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git checkout master
            git add _posts/
            git commit -m 'ü§ñ Upsert project page(s) by GitHub Actions'
            git push origin master
          else
            echo "Detect syntax error in '_data/projects.yml' file, check its syntax."
          fi
        fi

    - name: üöÄ Deploy to GitHub Pages
      if:   github.ref == 'refs/heads/master' && job.status == 'success'
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir:    ./_site
